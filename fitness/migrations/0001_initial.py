# Generated by Django 5.0.2 on 2024-02-29 14:55

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Administrator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exercise_name', models.CharField(max_length=100, unique=True)),
                ('calorie_burn_per_min', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='FoodBook',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('food_type', models.CharField(max_length=30)),
                ('food_name', models.CharField(max_length=100, unique=True)),
                ('calories_per_gram', models.FloatField(default=0.0)),
                ('fat_per_gram', models.FloatField(default=0.0)),
                ('protein_per_gram', models.FloatField(default=0.0)),
                ('carbohydrate_per_gram', models.FloatField(default=0.0)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=128)),
                ('email', models.EmailField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=5000)),
                ('title', models.CharField(max_length=100)),
                ('admin', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.administrator')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.CharField(max_length=1000)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.article')),
                ('reply_comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.IntegerField()),
                ('age', models.IntegerField()),
                ('height', models.FloatField()),
                ('weight', models.FloatField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.article')),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.CreateModel(
            name='FoodEaten',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('amount', models.FloatField()),
                ('food', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.foodbook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseTaken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('duration', models.IntegerField()),
                ('exercise', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.exercisebook')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.CreateModel(
            name='DailyMetabolism',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(auto_now_add=True)),
                ('daily_weight', models.FloatField()),
                ('bmr', models.FloatField(default=0.0)),
                ('intake_calorie', models.FloatField(default=0.0)),
                ('exercise_calorie', models.FloatField(default=0.0)),
                ('total_calorie', models.FloatField(default=0.0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='fitness.user')),
            ],
        ),
        migrations.AddConstraint(
            model_name='dailymetabolism',
            constraint=models.UniqueConstraint(fields=('user', 'date'), name='unique_user_date'),
        ),
    ]
